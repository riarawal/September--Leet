Maximum Product Subarray

Solution
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

----------

class Solution {
    public int maxProduct(int[] nums) {
//         int max=Integer.MIN_VALUE;
//         int p=1;
//         for(int i=0;i<nums.length;i++)
//         {
//             for(int j=i;j<nums.length;j++)
//             {   p=1;
//                 for(int k=i;k<=j;k++)
//                 {
//                     p*=nums[k];
                    
//                 }
//                 if(p>max)max=p;
//             }
//         }
//         return max;
        
        
        int max=nums[0], min=nums[0], res=nums[0];
        
        for(int i=1;i<nums.length;i++)
        {  int temp=max;
            max=Math.max(Math.max(max*nums[i],min*nums[i]),nums[i]);
            min=Math.min(Math.min(min*nums[i],temp*nums[i]),nums[i]);
            if(max>res)res=max;
        }
        return res;
    }
}
